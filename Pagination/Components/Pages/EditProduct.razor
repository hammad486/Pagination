@page "/edit-product/{id:int}"
@using Pagination.Models
@using Pagination.Services
@inject NavigationManager Navigation
@inject Services.ProductServices ProductService

<div class="card">
    <div class="card-body">
        <h3 class="card-title">Edit Product</h3>

        @if (Product != null)
        {
            <form>
                <div class="mb-3">
                    <label for="name" class="form-label">Product Name</label>
                    <input type="text" id="name" class="form-control" @bind="Product.Name" />
                </div>
                <div class="mb-3">
                    <label for="price" class="form-label">Price</label>
                    <input type="number" id="price" class="form-control" @bind="Product.Price" />
                </div>
                <div class="mb-3">
                    <label for="description" class="form-label">Description</label>
                    <textarea id="description" class="form-control" @bind="Product.Description"></textarea>
                </div>
                <button type="button" class="btn btn-primary" @onclick="SaveAsync">Save</button>
                <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
            </form>
        }
        else
        {
            <p>Loading product details...</p>
        }
    </div>
</div>

@code {
    [Parameter] public int Id { get; set; }
    private Product Product { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Load the product details for editing
        Product = await ProductService.GetProductByIdAsync(Id);
    }

    private async Task SaveAsync()
    {
        // Save the product using the service
        await ProductService.UpdateProductAsync(Product);
        Navigation.NavigateTo("/");
    }

    private void Cancel()
    {
        // Navigate back to the product list without saving
        Navigation.NavigateTo("/");
    }
}
